// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UC.DataLayer.Contex;

#nullable disable

namespace UC.DataLayer.Migrations
{
    [DbContext(typeof(ContextUC))]
    [Migration("20220918090810__init_UC_10")]
    partial class _init_UC_10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UC.ClassDomain.Domains.BrandCar", b =>
                {
                    b.Property<int>("BrandCar_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandCar_ID"), 1L, 1);

                    b.Property<string>("BrandCar_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BrandCar_Type")
                        .HasColumnType("int");

                    b.HasKey("BrandCar_ID");

                    b.ToTable("UC_BrandCar", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.City", b =>
                {
                    b.Property<int>("City_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("City_ID"), 1L, 1);

                    b.Property<string>("City_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("City_Province_ID")
                        .HasColumnType("int");

                    b.HasKey("City_ID");

                    b.ToTable("UC_City", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.CompanyInfo", b =>
                {
                    b.Property<int>("CompanyInfo_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyInfo_ID"), 1L, 1);

                    b.Property<string>("CompanyInfo_About")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("CompanyInfo_Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CompanyInfo_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyInfo_Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CompanyInfo_Instagram")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyInfo_LanguageID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyInfo_Mobile")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CompanyInfo_Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CompanyInfo_Site")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CompanyInfo_SmsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyInfo_TagID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyInfo_TypeDateTime")
                        .HasColumnType("int");

                    b.HasKey("CompanyInfo_ID");

                    b.ToTable("UC_CompanyInfo", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Language", b =>
                {
                    b.Property<int>("Language_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Language_ID"), 1L, 1);

                    b.Property<string>("Language_Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Language_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Language_PreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Language_Rtl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Language_ID");

                    b.ToTable("UC_Language", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Log", b =>
                {
                    b.Property<int>("Log_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Log_ID"), 1L, 1);

                    b.Property<DateTime>("Log_DateTime")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<int>("Log_RouteStructureID")
                        .HasColumnType("int");

                    b.Property<int>("Log_UserID")
                        .HasColumnType("int");

                    b.HasKey("Log_ID");

                    b.HasIndex("Log_RouteStructureID")
                        .IsUnique()
                        .HasDatabaseName("Index_LogRouteStructureID");

                    b.HasIndex("Log_UserID")
                        .IsUnique()
                        .HasDatabaseName("Index_LogUserID");

                    b.ToTable("UC_Log", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.MenuLink", b =>
                {
                    b.Property<int>("MenuLink_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuLink_ID"), 1L, 1);

                    b.Property<int>("MenuLink_ActionTagID")
                        .HasColumnType("int");

                    b.Property<int>("MenuLink_FormTagID")
                        .HasColumnType("int");

                    b.Property<string>("MenuLink_Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MenuLink_NavigationPath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("MenuLink_ParentID")
                        .HasColumnType("int");

                    b.Property<int>("MenuLink_SystemTagID")
                        .HasColumnType("int");

                    b.Property<int>("MenuLink_TagID")
                        .HasColumnType("int");

                    b.Property<int>("MenuLink_TypeRouteID")
                        .HasColumnType("int");

                    b.HasKey("MenuLink_ID");

                    b.ToTable("UC_MenuLink", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.ModelCar", b =>
                {
                    b.Property<int>("ModelCar_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelCar_ID"), 1L, 1);

                    b.Property<int>("ModelCar_BrandCarID")
                        .HasColumnType("int");

                    b.Property<string>("ModelCar_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ModelCar_ID");

                    b.ToTable("UC_ModelCar", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Province", b =>
                {
                    b.Property<int>("Province_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Province_ID"), 1L, 1);

                    b.Property<string>("Province_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Province_ID");

                    b.ToTable("UC_Province", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Role", b =>
                {
                    b.Property<int>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_ID"), 1L, 1);

                    b.Property<bool>("Role_IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("Role_IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<bool>("Role_ReadOnly")
                        .HasColumnType("bit");

                    b.Property<int>("Role_TagID")
                        .HasColumnType("int");

                    b.Property<int>("Role_TenantID")
                        .HasColumnType("int");

                    b.HasKey("Role_ID");

                    b.ToTable("UC_Role", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.RoleMembers", b =>
                {
                    b.Property<int>("RoleMembers_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleMembers_ID"), 1L, 1);

                    b.Property<int>("RoleMembers_RoleID")
                        .HasColumnType("int");

                    b.Property<int>("RoleMembers_RoleMemberID")
                        .HasColumnType("int");

                    b.HasKey("RoleMembers_ID");

                    b.ToTable("UC_RoleMembers", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.RoleUserPermission", b =>
                {
                    b.Property<int>("RoleUserPermission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleUserPermission_ID"), 1L, 1);

                    b.Property<bool?>("RoleUserPermission_BitMerge")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("RoleUserPermission_ParentID")
                        .HasColumnType("int");

                    b.Property<int>("RoleUserPermission_RoleID_UserID")
                        .HasColumnType("int");

                    b.Property<int>("RoleUserPermission_RouteStructureID")
                        .HasColumnType("int");

                    b.HasKey("RoleUserPermission_ID");

                    b.ToTable("UC_RoleUserPermission", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.RouteStructure", b =>
                {
                    b.Property<int>("RouteStructure_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteStructure_ID"), 1L, 1);

                    b.Property<int>("RouteStructure_ParentID")
                        .HasColumnType("int");

                    b.Property<int>("RouteStructure_Tagsknowledge_ID")
                        .HasColumnType("int");

                    b.Property<int>("RouteStructure_TenantID")
                        .HasColumnType("int");

                    b.Property<int>("RouteStructure_TypeRoute")
                        .HasColumnType("int");

                    b.HasKey("RouteStructure_ID");

                    b.ToTable("UC_RouteStructure", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Sms", b =>
                {
                    b.Property<int>("Sms_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sms_ID"), 1L, 1);

                    b.Property<string>("Sms_ActiveCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Sms_IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Sms_MessageID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sms_Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sms_Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sms_Time")
                        .HasMaxLength(5)
                        .HasColumnType("datetime2");

                    b.HasKey("Sms_ID");

                    b.HasIndex("Sms_ActiveCode")
                        .IsUnique()
                        .HasDatabaseName("Index_ActiveCode");

                    b.ToTable("UC_Sms", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Tagsknowledge", b =>
                {
                    b.Property<int>("Tagsknowledge_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tagsknowledge_ID"), 1L, 1);

                    b.Property<string>("Tagsknowledge_Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Tagsknowledge_ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Tagsknowledge_Type")
                        .HasColumnType("int");

                    b.HasKey("Tagsknowledge_ID");

                    b.ToTable("UC_Tagsknowledge", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.Token", b =>
                {
                    b.Property<int>("Token_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Token_ID"), 1L, 1);

                    b.Property<DateTime>("Token_DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Token_DateExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Token_DateLastAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token_HashCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Token_IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Token_UserID")
                        .HasColumnType("int");

                    b.HasKey("Token_ID");

                    b.HasIndex("Token_HashCode")
                        .HasDatabaseName("Index_HashCode");

                    b.ToTable("UC_Token", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.TranslateTags", b =>
                {
                    b.Property<int>("TranslateTags_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranslateTags_ID"), 1L, 1);

                    b.Property<int>("TranslateTags_LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("TranslateTags_TagsknowledgeID")
                        .HasColumnType("int");

                    b.Property<string>("TranslateTags_Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TranslateTags_ID");

                    b.ToTable("UC_TranslateTags", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<string>("User_Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("User_City_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("User_DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("User_Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("User_Gender")
                        .HasColumnType("int");

                    b.Property<string>("User_HashPassword")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("User_IdentifyNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("User_IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("User_IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("User_LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("User_PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("User_Province_ID")
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("User_ShabaNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Tell")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("User_TenantID")
                        .HasColumnType("int");

                    b.Property<string>("User_UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("User_ID");

                    b.HasIndex("User_UserName")
                        .IsUnique()
                        .HasDatabaseName("Index_UserName");

                    b.ToTable("UC_User", (string)null);
                });

            modelBuilder.Entity("UC.ClassDomain.Domains.UserRole", b =>
                {
                    b.Property<int>("UserRole_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRole_ID"), 1L, 1);

                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("UserRole_ID");

                    b.ToTable("UC_UserRole", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
